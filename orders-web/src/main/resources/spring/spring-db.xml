<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:env.properties"/>
    <!--jdbc pool-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="10" />  
        <!-- 连接池最大使用连接数量 -->  
        <property name="maxActive" value="1500" />  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="10" />  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="60000" />  
  
        <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，
        		比如说oracle。在mysql下建议关闭。 -->  
        <!-- <property name="poolPreparedStatements" value="true" /> <property   
            name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->  
  
        <!-- 验证数据库连接有效性，要求查询语句 -->  
        <property name="validationQuery" value="slect 1" />  
        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
        		如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->  
        <property name="testWhileIdle" value="true" />  
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置true会降低性能。 -->  
        <property name="testOnBorrow" value="false" />  
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置true会降低性能 -->  
        <property name="testOnReturn" value="false" />  
  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="25200000" />  
  
        <!-- 对于长时间不使用的连接强制关闭 -->  
        <property name="removeAbandoned" value="true" />  
        <!-- 关闭超过30分钟的空闲连接，1800秒，也就是30分钟 -->  
        <property name="removeAbandonedTimeout" value="1800" />  
        <!-- 关闭abanded连接时输出错误日志 -->  
        <property name="logAbandoned" value="true" />  
		<!-- 监控数据库 -->  
		<property name="filters" value="stat,wall" /> 
		  <!-- <property name="proxyFilters"> 
			   <list> 
			    <ref bean="logFilter" /> 
			   </list> 
  		  </property>  -->
    </bean>
    <!-- <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
	  <property name="statementExecutableSqlLogEnable" value="false" /> 
	</bean> -->
    <!--transaction control-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--redis config-->
    <bean id="jedisFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="usePool" value="true"/>
        <property name="database" value="0"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisFactory"/>
        <!--定义默认的序列化策略-->
        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <!--定义key默认序列化策略-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <!--定义value默认策略-->
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>
</beans>